[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BioEngineering Statistics 2025",
    "section": "",
    "text": "I created this course website using Quarto. To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to the website for BioE610 - Statistics for Bioengineers.\nBelow you will find the core information for the course.\nMore detailed information can be found under the ‘Syllabus’ and ‘Policies’ links.\nThe course schedule can be found under the ‘Schedule’ header.\nI will be posting the lectures after each class under the ‘Lectures’ header.\nAdditional resources for the class will gradually accrue under the ‘Resources’ Header."
  },
  {
    "objectID": "Syllabus.html",
    "href": "Syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "This course in an introduction to data management, data visualization and statistical inference that is intended for early-stage bioengineering and bioscience graduate students with no background in statistics. This is a practical course with a foundation of conceptual intuition matched with hands-on coding each week. The primary objective of the course is to provide foundational training in the organization, manipulation, visualization, and analysis of data, using the R statistical language in a reproducible manner. After this course students will be able to analyze their own data sets with confidence using reasonable approaches, and to provide a foundation for more advanced courses in statistics, data science and machine learning. The course is designed to primarily for the analysis of univariate (single response variable) data. For students interested in multivariate analysis, other courses in Department of Data Science are available. Examples and assignments in class will largely be drawn from bioengineering and the life sciences."
  },
  {
    "objectID": "Lecture_1.html",
    "href": "Lecture_1.html",
    "title": "lecture_1",
    "section": "",
    "text": "x\nxx\nblue"
  },
  {
    "objectID": "Lecture_1.html#slide-1",
    "href": "Lecture_1.html#slide-1",
    "title": "lecture_1",
    "section": "slide 1",
    "text": "slide 1\n\nx\nxx\nblue"
  },
  {
    "objectID": "Lecture_1.html#slide-2",
    "href": "Lecture_1.html#slide-2",
    "title": "lecture_1",
    "section": "slide 2",
    "text": "slide 2\n\nyy\ny\ngray"
  },
  {
    "objectID": "Lectures.html",
    "href": "Lectures.html",
    "title": "Lectures",
    "section": "",
    "text": "Lecture_1a\nLecture_1b"
  },
  {
    "objectID": "Lecture_Folder/Lecture_1.html",
    "href": "Lecture_Folder/Lecture_1.html",
    "title": "lecture_1 - placeholder",
    "section": "",
    "text": "x\nxx\nblue"
  },
  {
    "objectID": "Lecture_Folder/Lecture_1.html#slide-1",
    "href": "Lecture_Folder/Lecture_1.html#slide-1",
    "title": "lecture_1",
    "section": "slide 1",
    "text": "slide 1\n\nx\nxx\nblue"
  },
  {
    "objectID": "Lecture_Folder/Lecture_1.html#slide-2",
    "href": "Lecture_Folder/Lecture_1.html#slide-2",
    "title": "lecture_1",
    "section": "slide 2",
    "text": "slide 2\n\nyy\ny\ngray"
  },
  {
    "objectID": "Syllabus.html#course-schedule",
    "href": "Syllabus.html#course-schedule",
    "title": "BioE 610 - Bioengineering Statistics - Syllabus 2025",
    "section": "",
    "text": "Date\nTopics\nReadings\n\n\n\n\n01 April\nxxxxssssssssssssssssssssssssssssssssssss\nxxxx\n\n\n03 April\n\n\n\n\n\n08 April\n\n\n\n\n10 April\n\n\n\n\n\n15 April\n\n\n\n\n17 April\n\n\n\n\n\n22 April\n\n\n\n\n24 April\n\n\n\n\n\n29 April\n\n\n\n\n01 May\n\n\n\n\n\n06 May\n\n\n\n\n08 May\n\n\n\n\n\n13 May\n\n\n\n\n15 May\n\n\n\n\n\n20 May\n\n\n\n\n22 May\n\n\n\n\n\n27 May\n\n\n\n\n29 May\n\n\n\n\n\n3 June\n\n\n\n\n5 June\n\n\n\n\n\n10 June\nFINALS WEEK"
  },
  {
    "objectID": "about.html#instructor-and-class-information",
    "href": "about.html#instructor-and-class-information",
    "title": "About the Course",
    "section": "Instructor and class information",
    "text": "Instructor and class information\n\n\n\n\nInstructor\nBill Cresko\n\n\nClass times\nTuesday/Thursday 4:00 to 5:50\n\n\nClass room\nKC158\n\n\nOffice Hours\nMonday 3:30 to 4:30\n\n\ne-mail\nwcresko@uoregon.edu"
  },
  {
    "objectID": "about.html#course-description",
    "href": "about.html#course-description",
    "title": "About the Course",
    "section": "Course Description",
    "text": "Course Description\nThis course in an introduction to data management, data visualization and statistical inference that is intended for early-stage graduate students with no background in statistics. The primary objective of the course is to get students up to speed with respect to organization, manipulation, visualization, and analysis of data, using the R statistical language. Students will learn to organize and analyze data sets in the form of RStudio projects, using R Markdown files to reproducibly capture and render code, visualizations and analyses. This is a practical course with a foundation of conceptual intuition with the goal of enabling students to analyze their own data sets with confidence using reasonable approaches, and to provide a foundation for more advanced courses in statistics, data science and machine learning. The course is designed to primarily on univariate (single response variable) analysis. For students interested in multivariate analysis, other courses in Department of Data Science will be available. Examples and assignments in class will largely be drawn from the life sciences in general, and bioengineering in particular. For learning outcomes, and specific topics covered in class, please see the course goals below and the schedule on the ‘Syllabus’ page of this website."
  },
  {
    "objectID": "about.html#course-objectives",
    "href": "about.html#course-objectives",
    "title": "About the Course",
    "section": "Course Objectives",
    "text": "Course Objectives\n\nScientific Computing Fundamentals\n\nDescribe fundamental aspects of computer systems, including file types, storage structure, and the logic of programming languages.\nRead and write code in Unix.\nRead and write code in R using RStudio.\nProperly organize and format primary data and metadata files for analysis\nLearn programming fundamentals of the R statistical language, including objects, functions, iteration, and simulation.\nArticulate the importance of and requirements for reproducible science in bioinformatics.\nUtilize the UO’s supercomputer cluster, Talapas, for computationally intensive tasks.\n\nProbability and Exploratory Data Analysis\n\nDescribe the history of data analysis and statistics, particularly its eugenics origins.\nExplain probability in the context of distributions and sampling.\nDescribe the meaning of p-values, test statistics, and types of errors.\n\nStatistical Visualization\n\nProduce well-designed and informative figures in RStudio.\nMake publication-quality data visualizations, including scatterplots, boxplots, frequency distributions, mosaic plots, etc.\n\nPoint Estimation\n\nParameters and statistics\nConfidence intervals\nStatistical distributions\nT-statistics\n\nExperimental Design and Linear Models\n\nDesign experiments and clinical trials to produce the necessary types of data required to answer a given scientific question.\nUnderstand Type I and Type II statistical error, including p-values and power analysis.\nUnderstand ordinary least-squares regression and linear models in general\nLearn to apply general linear models to basic univariate analysis problems,including Analysis of Variance (ANOVA)\n\nApplication of Linear Models to Machine Learning\n\nxxx\nxxx\nxxx\n\nNonparameteric Statistics\n\nLearn nonparametric approaches to parameter estimate and statistical inference,\nincluding resampling (bootstrapping), permutation, and rank-based analysis.\nUnderstand how to analyze binary response variables and frequency-based (e.g. contingency table) data sets.\n\n\n/"
  },
  {
    "objectID": "about.html#instructor-information",
    "href": "about.html#instructor-information",
    "title": "About",
    "section": "Instructor information",
    "text": "Instructor information\n\n\n\nInstructor\nBill Cresko\n\n\nOffices\nM306 KC East Tower & Pacific 312\n\n\ne-mail\nwcresko@uoregon.edu"
  },
  {
    "objectID": "about.html#class-information",
    "href": "about.html#class-information",
    "title": "About",
    "section": "Class information",
    "text": "Class information\n\n\n\nClass times\nTuesday/Thursday 4:00 to 5:50\n\n\nClass room\nKC158\n\n\nOffice Hours\nMonday 3:30 to 4:30\n\n\nOffice hour location\nTBD"
  },
  {
    "objectID": "about.html#course-structure",
    "href": "about.html#course-structure",
    "title": "About the Course",
    "section": "Course Structure",
    "text": "Course Structure\nWe will hold on Tuesdays and Thursdays from 4:00PM to 5:50PM. These meetings will be relatively informal, and will usually begin with a 20-30 min. review of the most salient topics from the course book, possibly including some R coding demonstrations. I will post all lecture slides as Markdown and HTML after class to the course website under the ‘Lectures’ tab. The remaining meeting time will be reserved for questions, answers, and discussion (similar to a “recitation”, or additional “office hours”). I encourage students to work on exercises and assignments during these periods so that questions can be directly addressed as they emerge."
  },
  {
    "objectID": "Syllabus.html#course-description",
    "href": "Syllabus.html#course-description",
    "title": "Syllabus",
    "section": "",
    "text": "This course in an introduction to data management, data visualization and statistical inference that is intended for early-stage bioengineering and bioscience graduate students with no background in statistics. This is a practical course with a foundation of conceptual intuition matched with hands-on coding each week. The primary objective of the course is to provide foundational training in the organization, manipulation, visualization, and analysis of data, using the R statistical language in a reproducible manner. After this course students will be able to analyze their own data sets with confidence using reasonable approaches, and to provide a foundation for more advanced courses in statistics, data science and machine learning. The course is designed to primarily for the analysis of univariate (single response variable) data. For students interested in multivariate analysis, other courses in Department of Data Science are available. Examples and assignments in class will largely be drawn from bioengineering and the life sciences."
  },
  {
    "objectID": "Syllabus.html#course-structure",
    "href": "Syllabus.html#course-structure",
    "title": "Syllabus",
    "section": "Course Structure",
    "text": "Course Structure\nWe will hold on Tuesdays and Thursdays from 4:00PM to 5:50PM. These meetings will be relatively informal, and will usually begin with a 30-45 min. conceptual overview of topics with R coding demonstrations. I will post all lecture slides as Markdown and HTML after class to the course website under the ‘Lectures’ tab. The remaining meeting time will be reserved for group work, questions, answers, and discussion (similar to a “recitation”, or additional “office hours”). I encourage students to work on exercises and assignments during these periods so that questions can be directly addressed as they emerge."
  },
  {
    "objectID": "Syllabus.html#course-objectives",
    "href": "Syllabus.html#course-objectives",
    "title": "Syllabus",
    "section": "Course Objectives",
    "text": "Course Objectives\n\nScientific Computing Fundamentals\n\nDescribe fundamental aspects of computer systems, including file types, storage structure, and the logic of programming languages.\nRead and write code in Unix.\nRead and write code in R using RStudio.\nProperly organize and format primary data and metadata files for analysis\nLearn programming fundamentals of the R statistical language, including objects, functions, iteration, and simulation.\nArticulate the importance of and requirements for reproducible science in bioinformatics.\nUtilize the UO’s supercomputer cluster, Talapas, for computationally intensive tasks.\n\nProbability and Exploratory Data Analysis\n\nDescribe the history of data analysis and statistics, particularly its eugenics origins.\nExplain probability in the context of distributions and sampling.\nDescribe the meaning of p-values, test statistics, and types of errors.\n\nStatistical Visualization\n\nProduce well-designed and informative figures in RStudio.\nMake publication-quality data visualizations, including scatterplots, boxplots, frequency distributions, mosaic plots, etc.\n\nPoint Estimation\n\nParameters and statistics\nConfidence intervals\nStatistical distributions\nT-statistics\n\nExperimental Design and Linear Models\n\nDesign experiments and clinical trials to produce the necessary types of data required to answer a given scientific question.\nUnderstand Type I and Type II statistical error, including p-values and power analysis.\nUnderstand ordinary least-squares regression and linear models in general\nLearn to apply general linear models to basic univariate analysis problems,including Analysis of Variance (ANOVA)\n\nApplication of Linear Models to Machine Learning\n\nExamining linear models as classical machine learning\nPrediction and estimation\nShrinkage and regularization\nCross-validation\n\nNonparameteric Statistics\n\nLearn nonparametric approaches to parameter estimate and statistical inference,\nincluding resampling (bootstrapping), permutation, and rank-based analysis.\nUnderstand how to analyze binary response variables and frequency-based (e.g. contingency table) data sets."
  },
  {
    "objectID": "Policies.html",
    "href": "Policies.html",
    "title": "Policies",
    "section": "",
    "text": "This is a 4-credit hour course, so you should expect to complete ~ 120 hours of work for the course—an average, or about 12 hours each week (this includes time in-class).\nMy estimate for time usage for activities and assignments in an average week is below – some weeks may have shorter or longer time commitments either by design or due to course scheduling.\n\n\n\nActivity\nHours per Week\n\n\n\n\nIn-class meetings\n3-4\n\n\nPre-class reading\n4\n\n\nInformal exercises\n1\n\n\nHomework assignments\n2\n\n\nResearch, drafting, editing for final project\n1\n\n\nTOTAL\n12"
  },
  {
    "objectID": "Schedule.html",
    "href": "Schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "R for Data Science (RDS). 2025. Wickham, Çetinkaya-Rundel, and Grolemund. O’Reilly Press.\nModern Statistics with R (MSR). 2025. Måns Thulin, CRC Press.\nAn Introduction to Statistical Learning (ISLR). 2023. James, Witten, Hastie, Tibshirani. Springer\n\n\n\n\n\nModern Statistics for Modern Biology. 2019. Holmes and Huber. Cambridge University Press.\nggPlot2: Elegant Graphics for Data Analysis, 3rd Edition. Wickham, Navarro, Pedersen. Springer.\nThe Visual Display of Quantitative Information. Tufte, E.R. Graphics Press, Cheshire CT\n\n\n\n\n\nYou will be working on your own laptop computeri\nIf you would like to borrow a laptop let me know.\nLatest version of R (install here)\nLatest version of RStudio (install here)\nA terminal that allows ssh connection to the UO computing cluster (Talapas)\nGit installed and a GitHub account\nLaTeX installed on your computer"
  },
  {
    "objectID": "Resources.html",
    "href": "Resources.html",
    "title": "Resources",
    "section": "",
    "text": "Base R Cheat Sheet\nRStudio Collection of Cheat Sheets\nGit Cheat Sheet\nMarkdown Cheat Sheet\nLaTeX Cheat Sheet"
  },
  {
    "objectID": "Lecture_Folder/Lecture_1.html#xxx",
    "href": "Lecture_Folder/Lecture_1.html#xxx",
    "title": "lecture_1 - placeholder",
    "section": "",
    "text": "x\nxx\nblue"
  },
  {
    "objectID": "Lecture_Folder/Lecture_1.html#xxx-1",
    "href": "Lecture_Folder/Lecture_1.html#xxx-1",
    "title": "lecture_1 - placeholder",
    "section": "xxx",
    "text": "xxx\n\nyy\ny\ngray"
  },
  {
    "objectID": "Syllabus.html#online-course-resources",
    "href": "Syllabus.html#online-course-resources",
    "title": "Syllabus",
    "section": "Online Course Resources",
    "text": "Online Course Resources\n\nWe will be using Canvas as well as this GitHub Pages website for the course.\nTo access our course Canvas site, log into canvas.uoregon.edu using your DuckID.\nIf you have questions about using Canvas, visit the Canvas support page.\nCanvas and Technology Support also is available by phone (541-346-4357) or by live chat."
  },
  {
    "objectID": "Syllabus.html#technical-requirements",
    "href": "Syllabus.html#technical-requirements",
    "title": "Syllabus",
    "section": "Technical Requirements",
    "text": "Technical Requirements\n\nYou will be working on your own laptop computer, but if you would like to borrow a laptop let me know.\nLatest version of R (install here)\nLatest version of RStudio (install here)\nA terminal that allows ssh connection to the UO computing cluster (Talapas)"
  },
  {
    "objectID": "Syllabus.html#graded-assignments",
    "href": "Syllabus.html#graded-assignments",
    "title": "Syllabus",
    "section": "Graded Assignments",
    "text": "Graded Assignments\nProblem sets: Students will be assigned four problem sets (roughly one every 2 weeks) to complete independently. These will mostly focus on one or a few data sets each, and the goal will be for the students to organize, visualize, analyze, and interpret the data sets in light of specific scientific motivations. - 80% of grade.\nTerm project: Students will choose to analyze a dataset of their choice from their own research. The goal of this project is allow students agency in applying what they are learning in class to their own data, and to format the results in an appropriate Rmarkdown or Quarto document that can form the nucleus of a subsequent publication - 20% of grade.\nPreparing and submitting assignments: The information required to complete all in-class assignments and problem sets will be given in instructions on Canvas. Students should carefully follow the detailed instructions associated with each assignment. Students are encouraged to work together and share information. In particular, some students will have a higher skill level than others, and we encourage those students with more experience to help their peers. However, no direct sharing of code is allowed.\nPreparing and submitting assignments: Assignments will be submitted on Canvas in the form of Quarto files, with the rendered html output. Be sure to include your name on the document. Be professional – appropriately name your files, make sure they are organized, and submit only the information requested. Late assignments will not be accepted.\n\nGrading\n\n\n\nAssignment\nPercentage of Total Grade\n\n\n\n\nProblem Sets - 4 in total, 20% each\n80%\n\n\nTerm-long Projects\n20%\n\n\n\n\n\n\nGrade Percentage\nLetter Grade\nPass/No Pass Grade\n\n\n\n\n100% - 90%\nA\nPass\n\n\n89% - 80%\nB\nPass\n\n\n79% - 80%\nC\nNo Pass\n\n\n69% - 60%\nD\nNo Pass\n\n\n60% - 0%\nF\nNo Pass"
  },
  {
    "objectID": "Syllabus.html#grading",
    "href": "Syllabus.html#grading",
    "title": "Syllabus",
    "section": "Grading",
    "text": "Grading\n\n\n\nAssignment\nPercentage of Total Grade\n\n\n\n\nProblem Sets - 4 in total, 20% each\n80%\n\n\nTerm-long Projects\n20%\n\n\n\n\n\n\nGrade Percentage\nLetter Grade\nPass/No Pass Grade\n\n\n\n\n100% - 90%\nA\nPass\n\n\n89% - 80%\nB\nPass\n\n\n79% - 80%\nC\nNo Pass\n\n\n69% - 60%\nD\nNo Pass\n\n\n60% - 0%\nF\nNo Pass"
  },
  {
    "objectID": "Schedule.html#books-reading-materials-and-tools",
    "href": "Schedule.html#books-reading-materials-and-tools",
    "title": "Schedule",
    "section": "",
    "text": "R for Data Science (RDS). 2025. Wickham, Çetinkaya-Rundel, and Grolemund. O’Reilly Press.\nModern Statistics with R (MSR). 2025. Måns Thulin, CRC Press.\nAn Introduction to Statistical Learning (ISLR). 2023. James, Witten, Hastie, Tibshirani. Springer\n\n\n\n\n\nModern Statistics for Modern Biology. 2019. Holmes and Huber. Cambridge University Press.\nggPlot2: Elegant Graphics for Data Analysis, 3rd Edition. Wickham, Navarro, Pedersen. Springer.\nThe Visual Display of Quantitative Information. Tufte, E.R. Graphics Press, Cheshire CT\n\n\n\n\n\nYou will be working on your own laptop computer, but if you would like to borrow a laptop let me know.\nLatest version of R (install here)\nLatest version of RStudio (install here)\nA terminal that allows ssh connection to the UO computing cluster (Talapas)"
  },
  {
    "objectID": "Schedule.html#course-schedule",
    "href": "Schedule.html#course-schedule",
    "title": "Schedule",
    "section": "Course schedule",
    "text": "Course schedule\n\n\n\nWeek\nDates\nTopics\nReadings\nAssignments\n\n\n\n\n1\nApril1/3\n\nUnix & shell commands\nR scripts & reproducible analysis\nUse of GenAI\nTidy data and data wrangling\nGit, GitHub & Markdown\nSundry history of statistics\n\n\nRDS: 1-8; 27-29\nMSR: 1-2\nHappy Git\n\n\n\n\n2\nApril8/10\n\nExploratory data analysis\nData visualization\nParameters & statistics\nProbability distributions\nEstimates & confidence intervals\nClinical trials & experimental design\n\n\nRDS: 9-11\nMSR: 3-5\n\n\n\n\n3\nApril15/17\n\nHypothesis testing & significance\nType I & II errors\nT-tests\n\n\nMSR: 6-7\n\nHW1 Due\n\n\n4\nApril22/24\n\nFrequency analyses\nContingency tests\nNon-parametric tests\n\n\n\n\n\n5\nApril29/May1\n\nCorrelation & covariance\nOrdinary Linear Models (OLMs)\nSimple linear regression\n\n\nMSR: 8\n\nHW2 Due\n\n\n6\nMay 6/8\n\nAnalysis of Variance (ANOVA)\nSingle factor ANOVA\nPlanned & post hoc comparisons\n\n\nMSR: 8\n\n\n\n\n7\nMay 13/15\n\nMultiple factor ANOVA\nFactorial & Nested ANOVA\nRandom effects\n\n\nMSR: 8\n\nHW3 Due\n\n\n8\nMay 20/22\n\nHierarchical & mixed models\nGeneralized Linear Models (GLMs)\nLogistic & Poisson regression\n\n\nISLR: 1-3\n\n\n\n\n9\nMay 27/29\n\nIntro to statistical learning\nClassification & prediction\nValidation\nSimulation in statistics\n\n\nMSR: 11\nISLR: 4-6\n\nHW4 Due\n\n\n10\nJune 3/5\n\nRemote super computing\nTalapas and SLURM\nAWS Azure\n\n\n\n\n\n11\n10 June\nFINALS WEEK\n\nProject Due"
  },
  {
    "objectID": "Schedule.html#reading-materials-and-tools",
    "href": "Schedule.html#reading-materials-and-tools",
    "title": "Schedule",
    "section": "",
    "text": "R for Data Science (RDS). 2025. Wickham, Çetinkaya-Rundel, and Grolemund. O’Reilly Press.\nModern Statistics with R (MSR). 2025. Måns Thulin, CRC Press.\nAn Introduction to Statistical Learning (ISLR). 2023. James, Witten, Hastie, Tibshirani. Springer\n\n\n\n\n\nModern Statistics for Modern Biology. 2019. Holmes and Huber. Cambridge University Press.\nggPlot2: Elegant Graphics for Data Analysis, 3rd Edition. Wickham, Navarro, Pedersen. Springer.\nThe Visual Display of Quantitative Information. Tufte, E.R. Graphics Press, Cheshire CT\n\n\n\n\n\nYou will be working on your own laptop computeri\nIf you would like to borrow a laptop let me know.\nLatest version of R (install here)\nLatest version of RStudio (install here)\nA terminal that allows ssh connection to the UO computing cluster (Talapas)\nGit installed and a GitHub account\nLaTeX installed on your computer"
  },
  {
    "objectID": "about.html#online-course-resources",
    "href": "about.html#online-course-resources",
    "title": "About",
    "section": "Online Course Resources",
    "text": "Online Course Resources\n\nWe will be using Canvas as well as this GitHub Pages website (https://wcresko.github.io/BioE_Stats/).\nTo access our course Canvas site, log into canvas.uoregon.edu using your DuckID.\nIf you have questions about using Canvas, visit the Canvas support page.\nCanvas and Technology Support also is available by phone (541-346-4357) or by live chat."
  },
  {
    "objectID": "about.html#technical-requirements",
    "href": "about.html#technical-requirements",
    "title": "About",
    "section": "Technical Requirements",
    "text": "Technical Requirements\n\nYou will be working on your own laptop computer.\nIf you would like to borrow a laptop let me know.\nLatest version of R (install here).\nLatest version of RStudio (install here).\nA terminal that allows ssh connection to the UO computing cluster (Talapas)."
  },
  {
    "objectID": "Policies.html#workload-expectations",
    "href": "Policies.html#workload-expectations",
    "title": "Policies",
    "section": "",
    "text": "This is a 4-credit hour course, so you should expect to complete ~ 120 hours of work for the course—an average, or about 12 hours each week (this includes time in-class).\nMy estimate for time usage for activities and assignments in an average week is below – some weeks may have shorter or longer time commitments either by design or due to course scheduling.\n\n\n\nActivity\nHours per Week\n\n\n\n\nIn-class meetings\n3-4\n\n\nPre-class reading\n4\n\n\nInformal exercises\n1\n\n\nHomework assignments\n2\n\n\nResearch, drafting, editing for final project\n1\n\n\nTOTAL\n12"
  },
  {
    "objectID": "Policies.html#communication",
    "href": "Policies.html#communication",
    "title": "Policies",
    "section": "Communication",
    "text": "Communication\n\nElectronic\n\nOur class will communicate through our Canvas site. Announcements and emails are archived there, automatically forwarded to your UO email, and can even reach you by text. Check and adjust your settings under Account &gt; Notifications.\nWe will also be using this GitHub Pages website (https://wcresko.github.io/BioE_Stats/) for the course as the repository for lecture schedule, syllabus, lecture slides and other materials.\nEvery Monday I will post an Announcement that previews critical concepts we’ll work on that week and a checklist of the week’s due dates.\nI will contact individual students when needed through email, and I try to respond to questions within one business day.\nWhen giving feedback on assignments, I do so in Canvas, and turnaround time for feedback is generally one week.\n\n\n\nOffice hours\n\nI will host office hours each week on Monday and from 3:30 to 4:30. The end of many class periods will also function as a form of office hour.\nI welcome meetings outside my regular office hours as well - please email me to set a time.\nDuring office hours, students bring in a wide range of concerns, questions, and successes. We might\n\ntalk through a specific concept or problem to clarify it\nthink together about an issue a student is curious about that relates to the class\ndiscuss a student’s post-graduation goals\nidentify more supportive methods to study for a future exam or to begin a project\nor any number of other topics"
  },
  {
    "objectID": "Policies.html#classroom-community-expectations",
    "href": "Policies.html#classroom-community-expectations",
    "title": "Policies",
    "section": "Classroom Community Expectations",
    "text": "Classroom Community Expectations\n\nParticipate and Contribute:\nAll students are expected to participate by sharing ideas and contributing to the learning environment. This entails preparing, following instructions, and engaging respectfully and thoughtfully with others. While all students should participate, participation is not just talking, and a range of participation activities support learning. Participation might look like speaking aloud in the full class and in small groups, and working collaboratively on coding projects. We will establish more specific participation guidelines and criteria for contributions in our first weeks of the term.\n\n\nExpect and Respect Diversity\nAll classes at the University of Oregon welcome and respect diverse experiences, perspectives, and approaches. What is not welcome are behaviors or contributions that undermine, demean, or marginalize others based on race, ethnicity, gender, sex, age, sexual orientation, religion, ability, or socioeconomic status. We will value differences and communicate disagreements with respect. We may establish more specific guidelines and protocols to ensure inclusion and equity for all members of our learning community.\n\n\nHelp Everyone Learn\nPart of how we learn together is by learning from one another. To do this effectively, we need to be patient with each other, identify ways we can assist others, and be open-minded to receiving help and feedback from others. Don’t hesitate to contact me to ask for assistance or offer suggestions that might help us learn better."
  },
  {
    "objectID": "Policies.html#generative-artificial-intelligence-genai-use",
    "href": "Policies.html#generative-artificial-intelligence-genai-use",
    "title": "Policies",
    "section": "Generative Artificial Intelligence (GenAI) Use",
    "text": "Generative Artificial Intelligence (GenAI) Use\nStudents can use GenAI tools in this class to help with certain aspects of coding. We will discuss during the first week how GenAI can be a tool to help you, but it cannot replace your statistical intuition and knowledge. However, you cannot use content such as text, graphics and code created by GenAI tools in your work. You must be the author/creator of your work submissions. For example, you can use a GenAI tool to suggest a paper outline based on a draft you provide it, or suggest some code, but you cannot submit a paper with text or code generated by GenAI as if the text or code is your own writing. If you are in doubt or have questions about a particular GenAI tool and if its use is okay, check in with me and let’s discuss!"
  },
  {
    "objectID": "Policies.html#university-course-policies",
    "href": "Policies.html#university-course-policies",
    "title": "Policies",
    "section": "University Course Policies",
    "text": "University Course Policies\nPlease read and make sure you are familiar with the important policies that apply to all UO courses, which can be found here."
  },
  {
    "objectID": "Software.html",
    "href": "Software.html",
    "title": "Software",
    "section": "",
    "text": "Latest version of R\nLatest version of RStudio\nA terminal that allows ssh connection to the UO computing cluster (Talapas)\nGit installed and a GitHub account for version control and collaboration\nLaTeX installed on your computer for mathematical typesetting"
  },
  {
    "objectID": "Software.html#software-tools-to-install",
    "href": "Software.html#software-tools-to-install",
    "title": "Software",
    "section": "",
    "text": "Latest version of R\nLatest version of RStudio\nA terminal that allows ssh connection to the UO computing cluster (Talapas)\nGit installed and a GitHub account for version control and collaboration\nLaTeX installed on your computer for mathematical typesetting"
  },
  {
    "objectID": "Software.html#r-and-rstudio",
    "href": "Software.html#r-and-rstudio",
    "title": "Software",
    "section": "R and RStudio",
    "text": "R and RStudio\n\nLatest version of R (install here)\nLatest version of RStudio (install here)"
  },
  {
    "objectID": "Software.html#accessing-the-shell-via-a-terminal-application",
    "href": "Software.html#accessing-the-shell-via-a-terminal-application",
    "title": "Software",
    "section": "Accessing the shell via a terminal application",
    "text": "Accessing the shell via a terminal application\n\nMac or Linux users\n\nopen the native “Terminal” app on Mac or Linux\ninstall another terminal like “iTerm2”\n\n\n\nWindows users\n\nGuide: https://ubuntu.com/tutorials/install-ubuntu-on-wsl2-on-windows-10#1-overview\nRun Windows PowerShell as administrator\nInstall WSL2 by typing wsl --install\nRestart your computer\nSearch for and install Ubuntu from Microsoft store app\nOR type wsl --install -d ubuntu on PowerShell to do both at once\n\n\n\nAccessing the shell on Windows\n\nOpen Ubuntu and set up a username and password\nDoes not have to match your login info for Windows\nRun sudo apt update then sudo apt upgrade to ensure everything is up to date\nWill need to create folders and files within your Ubuntu folder on your computer"
  },
  {
    "objectID": "Software.html#git-and-github",
    "href": "Software.html#git-and-github",
    "title": "Software",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\nLastest version of Git (install here)\nA GitHub account (information here)"
  },
  {
    "objectID": "Software.html#latex",
    "href": "Software.html#latex",
    "title": "Software",
    "section": "LaTeX",
    "text": "LaTeX\n\nLastest version of LaTeX (install here)"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html",
    "href": "Lecture_Folder/Week1a.html",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gt)\nlibrary(readxl)\ntheme_set(theme_minimal())"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#statistics-for-bioengineers",
    "href": "Lecture_Folder/Week1a.html#statistics-for-bioengineers",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Statistics for Bioengineers",
    "text": "Statistics for Bioengineers\n{height = “50”}"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#goals-of-the-course",
    "href": "Lecture_Folder/Week1a.html#goals-of-the-course",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Goals of the course",
    "text": "Goals of the course\n\n\n\n\n\n\n\nThis is a practical course and we will learn by doing\n\n\n\nTeach fundamental skills for your scientific careers\nProvide a broad coverage of the core components of modern statistics\nProvide you with the computational tools necessary to carry out your work\nTo prepare you for more advanced statistics and programming education"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#class-introductions",
    "href": "Lecture_Folder/Week1a.html#class-introductions",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Class Introductions",
    "text": "Class Introductions\n\n\n\n\n\n\n\nWho are you?\n\n\n\nYour name\nYear in grad school\nHome lab or rotation lab\nWhat is your good news this week?\nWhat has your experience with programming/statistics been like?"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#what-will-you-learn",
    "href": "Lecture_Folder/Week1a.html#what-will-you-learn",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "What will you learn?",
    "text": "What will you learn?\n\n\nRead and write code in Unix and R\nImplement reproducible research practices through\n\nMarkdown\nGitHub\nTalapas and Amazon Web Services (AWS)"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#what-will-you-learn-1",
    "href": "Lecture_Folder/Week1a.html#what-will-you-learn-1",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "What will you learn?",
    "text": "What will you learn?\n\n\nExploratory data analysis and visualization\nProbability in the context of distributions and sampling\nExperimental design\np-values, test statistics, and types of errors\nStatistical analyses such as t-tests and contigency tests\nLinear and non-linear modeling\nClassical machine learning"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#class-logistics",
    "href": "Lecture_Folder/Week1a.html#class-logistics",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Class Logistics",
    "text": "Class Logistics\n\n\nMeet Tuesdays and Thursdays from 4:00pm - 5:50pm in KC158\n\nMost of class time will be hands-on coding practice, less time lecturing\n\nCoding and statistics practice via homework in Weeks 2-9\n\nAvailable Tuesday of that week, due before class on Tuesday in two weeks\n\nWeeks 10-11 you will complete a final coding project\n\nDesign script(s) that works with your research and interests using the skills you’ve learned this term"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#required-materials",
    "href": "Lecture_Folder/Week1a.html#required-materials",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Required Materials",
    "text": "Required Materials\n\nNo textbooks or purchases required\nAccess to a laptop or computer running Windows, MacOS, or Linux operating systems\nAn account on Talapas (through your lab, or through CBDS)\nAnnouncements and assignments posted on Canvas\nThe majority of course material on our class website https://wcresko.github.io/BioE_Stats/"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#section-5",
    "href": "Lecture_Folder/Week1a.html#section-5",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "",
    "text": "Note\n\n\n\nMac and Linux systems run using the same language, but previous versions of Windows lacks some of the basic features found on other systems\nTo help you practice and learn how to code in Unix, we will help you install some programs on your computer for running Unix\nR and RStudio should work on any computer"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#running-r",
    "href": "Lecture_Folder/Week1a.html#running-r",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Running R",
    "text": "Running R\n\nNeed to make sure that you have R installed\n\nlocally or on a server\nhttps://www.r-project.org\n\nCan run R from the command line\n\njust type R\ncan run it locally as well as on clusters"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#running-r-1",
    "href": "Lecture_Folder/Week1a.html#running-r-1",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Running R",
    "text": "Running R\n\nInstall an R Integrated Development Environment (IDE)\n\nRStudio: http://www.rstudio.com\nMakes working with R much easier, particularly for a new R user\nRun on Windows, Mac or Linux OS\nUse the RStudio Desktop Open Source (Free)"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#rstudio",
    "href": "Lecture_Folder/Week1a.html#rstudio",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#accessing-the-shell",
    "href": "Lecture_Folder/Week1a.html#accessing-the-shell",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Accessing the shell",
    "text": "Accessing the shell\n\nMac users: open the “Terminal” app, or use another app like ‘iTerm2’\nLinux users: open one of several “Terminal” apps\n\n\n\n\n\n\nWindows users have a little more work to do\n\n\nSee the next slides"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#accessing-the-shell-1",
    "href": "Lecture_Folder/Week1a.html#accessing-the-shell-1",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Accessing the shell",
    "text": "Accessing the shell\nWindows users\n\nGuide: https://ubuntu.com/tutorials/install-ubuntu-on-wsl2-on-windows-10#1-overview\nRun Windows PowerShell as administrator\nInstall WSL2 by typing wsl --install\nRestart your computer\nSearch for and install Ubuntu from Microsoft store app\nOR type wsl --install -d ubuntu on PowerShell to do both at once"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#accessing-the-shell-on-windows",
    "href": "Lecture_Folder/Week1a.html#accessing-the-shell-on-windows",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Accessing the shell on Windows",
    "text": "Accessing the shell on Windows\n\nOpen Ubuntu and set up a username and password\nDoes not have to match your login info for Windows\nRun sudo apt update then sudo apt upgrade to ensure everything is up to date\nWill need to create folders and files within your Ubuntu folder on your computer"
  },
  {
    "objectID": "Lecture_Folder/Week1a.html#terminal-in-rstudio",
    "href": "Lecture_Folder/Week1a.html#terminal-in-rstudio",
    "title": "Week 1a Statistics for Bioengineering",
    "section": "Terminal in RStudio",
    "text": "Terminal in RStudio\n\n\n\n\n\n\nImportant\n\n\nRStudio has a terminal pane all it's own that you can use"
  },
  {
    "objectID": "Resources.html#week-1",
    "href": "Resources.html#week-1",
    "title": "Resources",
    "section": "",
    "text": "Data_Set_1"
  },
  {
    "objectID": "Resources.html#cheat-sheets",
    "href": "Resources.html#cheat-sheets",
    "title": "Resources",
    "section": "",
    "text": "Base R Cheat Sheet\nRStudio Collection of Cheat Sheets\nGit Cheat Sheet\nMarkdown Cheat Sheet\nLaTeX Cheat Sheet"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#why-do-we-need-coding-and-scripting",
    "href": "Lecture_Folder/Week1b.html#why-do-we-need-coding-and-scripting",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Why do we need coding and scripting?",
    "text": "Why do we need coding and scripting?\n\n\nIt is incredibly fast and powerful, particularly for repeated actions\nIt allows you to do thousands of ‘clicks’ with single commands\nAbility to analyze large datasets that Excel and other GUIs can’t handle well\nAccess to thousands of free programs made for and by scientists\nThe commands work almost identically across platforms\nAbility to use computer clusters like Talapas"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#what-is-the-difference-between-coding-and-scripting",
    "href": "Lecture_Folder/Week1b.html#what-is-the-difference-between-coding-and-scripting",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "What is the difference between coding and scripting?",
    "text": "What is the difference between coding and scripting?\n\n\ncoding generally involves computer languages that use compilers\n\nC^{++}, Fortran, etc\n\nscripting generally involves computer languages that are interpreted on the fly\n\nPython, R, Julia, etc.\n\ncoding - faster but less flexible; scripting - flexible but slower\nThe distinction between the two has become somewhat fuzzy and most modern analytical pipelines contain a combination of both"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#why-do-we-need-statistics",
    "href": "Lecture_Folder/Week1b.html#why-do-we-need-statistics",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Why do we need statistics?",
    "text": "Why do we need statistics?\n\n\nWe almost never know the world perfectly, but still want to draw conclusions or make decisions\nWe need to estimate underlying parameters from samples of data\nSometimes we need to test hypotheses using data\nOther times we need to more succinctly summarize and/or visualize large amounts of data\nThere are well known mathematical rules that help us\nStatistics can be done by hand, but computers let us do most of the mathematics quickly"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#why-do-we-need-statistics-1",
    "href": "Lecture_Folder/Week1b.html#why-do-we-need-statistics-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Why do we need statistics?",
    "text": "Why do we need statistics?\n\n\nWe want to turn data into conclusions about the world\n\npoint estimates and confidence intervals\nexperimental design\nhypothesis testing\ndata reduction of highly dimensional data\n\nWe need a firm understanding of probability, sampling and distributions"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#what-is-unix",
    "href": "Lecture_Folder/Week1b.html#what-is-unix",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "What is Unix?",
    "text": "What is Unix?\n\n\nA scripting language developed in 1969, released in 1973\nServes as the base language for many programs and computers\nIs the operating system for computers\nLinux is an open-source version of the same language"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#what-is-a-shell",
    "href": "Lecture_Folder/Week1b.html#what-is-a-shell",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "What is a shell?",
    "text": "What is a shell?\n\nThe ‘shell’ is a program that runs UNIX and takes in commands and gives them to the operating system\nBash acts as the shell in macs, linux, and now windows\nYou can access the shell via a terminal window"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#recipes-for-a-shell-command",
    "href": "Lecture_Folder/Week1b.html#recipes-for-a-shell-command",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Recipes for a shell command",
    "text": "Recipes for a shell command\n\nPrompt: notation used to indicate your computer is ready to accept a new command\nCommand: the building blocks of programming, tell computer to do a specific task\nOptions: change the behavior of a command\nArgument: what the command should operate on"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#why-use-the-shell",
    "href": "Lecture_Folder/Week1b.html#why-use-the-shell",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Why use the shell?",
    "text": "Why use the shell?\n\n\nSpeed\nExamine large and/or unique files\nAccess super computers\nUse programs only available via shell\nThe commands work almost identically across platforms\nYou can even use them on a large computer cluster like Talapas\nIt is incredibly powerful particularly for repeated actions\nIt allows you to do thousands of ‘clicks’ with single commands"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#where-do-you-get-help",
    "href": "Lecture_Folder/Week1b.html#where-do-you-get-help",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Where do you get help?",
    "text": "Where do you get help?\n\nManual pages!\n\nThe shell has manuals for all basic commands\nType man [command_name] to access the manual for a specific command\nType q to exit\n\nAlso…the internet!"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#common-navigation-commands-1",
    "href": "Lecture_Folder/Week1b.html#common-navigation-commands-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Common navigation commands",
    "text": "Common navigation commands"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#the-way-you-normally-navigate",
    "href": "Lecture_Folder/Week1b.html#the-way-you-normally-navigate",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "The way you normally navigate",
    "text": "The way you normally navigate"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#how-is-a-computer-organized",
    "href": "Lecture_Folder/Week1b.html#how-is-a-computer-organized",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "How is a computer organized?",
    "text": "How is a computer organized?\n\nSystem of directories (folders) and files\n/ = the root directory, which holds all other directories\nMost of your files will be located under /Users in a directory of your username\nthe ~ is shorthand for your home folder\nNavigation in the shell consists of jumping up and down between directories and seeing what’s in them\nThe “path” refers to the location a file is in\n\nex: “/Users/wcresko/Documents”"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#common-navigation-commands-2",
    "href": "Lecture_Folder/Week1b.html#common-navigation-commands-2",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Common navigation commands",
    "text": "Common navigation commands\n\n\npwd = “print working directory”, which will print where you currently are in the system\n\nIn Windows, cd will print your working directory\n\nls = “list”, list all directories and files in your current position\n\nls –F = denote which results are directories, files, etc.\nls –l = ”long format”, lists total file sizes\nls –r = “reverse”, lists the results in reverse order\nls –S = “size”, sort results by size\nls –t = “time”, sort results by time created, from most recent to last"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#common-navigation-commands-3",
    "href": "Lecture_Folder/Week1b.html#common-navigation-commands-3",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Common Navigation Commands",
    "text": "Common Navigation Commands\n\ncd = “change directory”, will place you in a new position based on your path argument\n\ncd .. = go up one directory\ncd – = go to the directory you were at last (like the back arrow on an internet browser)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#lets-practice",
    "href": "Lecture_Folder/Week1b.html#lets-practice",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Let’s practice!",
    "text": "Let’s practice!\n\nTry navigating around your computer using cd and ls\nIf you are on Ubuntu, you may need to create some empty directories in your Ubuntu folder before navigating in the terminal"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#making-new-files",
    "href": "Lecture_Folder/Week1b.html#making-new-files",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Making new files",
    "text": "Making new files\n\n\nMake new folders: mkdir\nMake new files: nano, touch\nRename files: mv\nMove files: mv\nCopy files: cp\nDelete files: rm\nExamining file length: wc\nReading files: cat\nLooking at beginning or end: head or tail"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#things-to-keep-in-mind",
    "href": "Lecture_Folder/Week1b.html#things-to-keep-in-mind",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Things to keep in mind",
    "text": "Things to keep in mind\n\nThe shell trusts you\n\nIt will delete files you say to delete\nIt will override files if you name 2 things the same\n\nNaming conventions\n\nAvoid spaces\nDon’t start with a –\nStick to letters, numbers, . , -, and _\n\nUse appropriate file extensions in file names\n\nSome software expect files with certain extensions (.fasta, .txt, etc.)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#lets-try-it-out",
    "href": "Lecture_Folder/Week1b.html#lets-try-it-out",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Let’s try it out",
    "text": "Let’s try it out\n\nMake a new directory called whatever you’d like.\nAdd a file named “Practice.txt” to the directory and add some text to it\nRead the contents of the file and get its length\nRename the file to “Super_practice.txt”\nMove the file to a new folder named “Testing”\nMake a copy of the file named “Super_practice_copy.txt”\nRead the contents of the file and get its length to make sure it’s the same as Super_practice.txt\nDelete the original “Super_practice.txt”"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#break",
    "href": "Lecture_Folder/Week1b.html#break",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Break",
    "text": "Break"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#an-example-to-get-us-started",
    "href": "Lecture_Folder/Week1b.html#an-example-to-get-us-started",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "An example to get us started",
    "text": "An example to get us started"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#data-set-rules-of-thumb-aka-tidy-data",
    "href": "Lecture_Folder/Week1b.html#data-set-rules-of-thumb-aka-tidy-data",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Data set rules of thumb (aka Tidy Data)",
    "text": "Data set rules of thumb (aka Tidy Data)\n\nStore a copy of data in nonproprietary software and hardware formats, such as plain ASCII text (aka a flat file)\nLeave an uncorrected file when doing analyses\nUse descriptive names for your data files and variables\nInclude a header line with descriptive variable names\nMaintain effective metadata about the data\nWhen you add observations to a database, add rows\nWhen you add variables to a database, add columns, not rows\nA column of data should contain only one data type"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#computational-tools---r-and-rstudio",
    "href": "Lecture_Folder/Week1b.html#computational-tools---r-and-rstudio",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Computational Tools - R and RStudio",
    "text": "Computational Tools - R and RStudio"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#why-use-r",
    "href": "Lecture_Folder/Week1b.html#why-use-r",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Why use R?",
    "text": "Why use R?\n\n\nGood general scripting tool for statistics and mathematics\nPowerful and flexible and free\nRuns on all computer platforms\nNew enhancements coming out all the time\nSuperb data management & graphics capabilities"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#why-use-r-1",
    "href": "Lecture_Folder/Week1b.html#why-use-r-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Why use R?",
    "text": "Why use R?\n\n\nReproducibility - can keep your scripts to see exactly what was done\nYou can write your own functions\nLots of online help available\nCan use a nice GUI front end such as Rstudio\nCan embed your R analyses in dynamic, polished files using Markdown\nMarkdown can be reused for websites, papers, books, presentations…"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#r-scripts-and-markdown-files",
    "href": "Lecture_Folder/Week1b.html#r-scripts-and-markdown-files",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "R scripts and Markdown files",
    "text": "R scripts and Markdown files\n\nOften we want to write scripts that can just be run\nWe can also embed code in Markdown files that provide more annotations\nhttps://quarto.org/docs/authoring/markdown-basics.html\nYou can insert Rchunks into Quarto markdown documents"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#rscript-basics",
    "href": "Lecture_Folder/Week1b.html#rscript-basics",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Rscript basics",
    "text": "Rscript basics\n\nA series of R commands that will be executed\nCan add comments using hashtags #\nCan have pipes (|&gt;) to connect one step to the next"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#markdown-basics",
    "href": "Lecture_Folder/Week1b.html#markdown-basics",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Markdown basics",
    "text": "Markdown basics\n\na very simplified way for standard typesetting\nsimple markdown can be rendered in numerous different ways\nLists, codeblocks, images and more can all be inserted"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#inserting-equations-in-markdown",
    "href": "Lecture_Folder/Week1b.html#inserting-equations-in-markdown",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Inserting equations in markdown",
    "text": "Inserting equations in markdown\n$$e=mc^2$$\n\\[e=mc^2\\]\n$$\\iint\\limits_{a}^{b} f(x,y) \\, dx \\, dy$$\n\\[\\iint\\limits_{a}^{b} f(x,y) \\, dx \\, dy\\]"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#basics-of-r",
    "href": "Lecture_Folder/Week1b.html#basics-of-r",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "BASICS of R",
    "text": "BASICS of R\n\nCommands can be submitted through the terminal, console or scripts\nIn your scripts, anything that follows ‘#’ symbol (aka hash) is just for humans\nNotice on these slides I’m evaluating the code chunks and showing output\nThe output is shown here after the two # symbols and the number of output items is in []\nAlso notice that R follows the normal priority of mathematical evaluation\n\n\n4*4\n\n[1] 16\n\n\n\n(4+3*2^2)\n\n[1] 16"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#assigning-variables",
    "href": "Lecture_Folder/Week1b.html#assigning-variables",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Assigning Variables",
    "text": "Assigning Variables\n\nA better way to do this is to assign variables\nVariables are assigned values using the &lt;- operator.\nVariable names must begin with a letter, but other than that, just about anything goes.\nDo keep in mind that R is case sensitive."
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#assigning-variables-1",
    "href": "Lecture_Folder/Week1b.html#assigning-variables-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Assigning Variables",
    "text": "Assigning Variables\n\nx &lt;- 2\nx*3\n\n[1] 6\n\ny &lt;- x * 3\ny-2\n\n[1] 4\n\n\nThese do not work\n\n3y &lt;- 3\n3*y &lt;- 3"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#arithmetic-operations-on-functions",
    "href": "Lecture_Folder/Week1b.html#arithmetic-operations-on-functions",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Arithmetic operations on functions",
    "text": "Arithmetic operations on functions\n\nArithmetic operations can be performed easily on functions as well as numbers.\nTry the following, and then your own.\n\n\nx+2\nx^2\nlog(x)\n\n\nNote that the last of these - log - is a built in function of R, and therefore the object of the function needs to be put in parentheses\nThese parentheses will be important, and we’ll come back to them later when we add arguments after the object in the parentheses\n\nThe outcome of calculations can be assigned to new variables as well, and the results can be checked using the ‘print’ command"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#arithmetic-operations-on-functions-1",
    "href": "Lecture_Folder/Week1b.html#arithmetic-operations-on-functions-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Arithmetic operations on functions",
    "text": "Arithmetic operations on functions\n\ny &lt;- 67\nprint(y)\n\n[1] 67\n\nx &lt;- 124\nz &lt;- (x*y)^2\nprint(z)\n\n[1] 69022864"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#strings",
    "href": "Lecture_Folder/Week1b.html#strings",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "STRINGS",
    "text": "STRINGS\n\nVariables and operations can be performed on characters as well\nNote that characters need to be set off by quotation marks to differentiate them from numbers\nThe c stands for concatenate\nNote that we are using the same variable names as we did previously, which means that we’re overwriting our previous assignment\nA good rule of thumb is to use new names for each variable, and make them short but still descriptive"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#strings-1",
    "href": "Lecture_Folder/Week1b.html#strings-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "STRINGS",
    "text": "STRINGS\n\nx &lt;- \"I Love\"\nprint (x)\n\n[1] \"I Love\"\n\ny &lt;- \"Biostatistics\"\nprint (y)\n\n[1] \"Biostatistics\"\n\nz &lt;- c(x,y)\nprint (z)\n\n[1] \"I Love\"        \"Biostatistics\""
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#factors",
    "href": "Lecture_Folder/Week1b.html#factors",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "FACTORS",
    "text": "FACTORS\n\nThe variable z is now what is called a list of character values.\nSometimes we would like to treat the characters as if they were units for subsequent calculations.\nThese are called factors, and we can redefine our character variables as factors.\nThis might seem a bit strange, but it’s important for statistical analyses where we might want to see the mean or variance for two different treatments."
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#factors-1",
    "href": "Lecture_Folder/Week1b.html#factors-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "FACTORS",
    "text": "FACTORS\n\nz_factor &lt;- as.factor(z)\nprint (z_factor)\n\n\nNote that factor levels are reported alphabetically"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#vectors",
    "href": "Lecture_Folder/Week1b.html#vectors",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "VECTORS",
    "text": "VECTORS\n\nIn general R thinks in terms of vectors (a list of characters, factors or numerical values) and it will benefit any R user to try to write programs with that in mind, as it will simplify most things.\nVectors can be assigned directly using the ‘c()’ function and then entering the exact values."
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#vectors-1",
    "href": "Lecture_Folder/Week1b.html#vectors-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "VECTORS",
    "text": "VECTORS\n\nx &lt;- c(2,3,4,2,1,2,4,5,10,8,9)\nprint(x)\n\n [1]  2  3  4  2  1  2  4  5 10  8  9"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#basic-statistics",
    "href": "Lecture_Folder/Week1b.html#basic-statistics",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Basic Statistics",
    "text": "Basic Statistics\n\nMany functions exist to operate on vectors.\nCombine these with your previous variable to see what happens.\nAlso, try to find other functions (e.g. standard deviation)."
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#basic-statistics-1",
    "href": "Lecture_Folder/Week1b.html#basic-statistics-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Basic Statistics",
    "text": "Basic Statistics\n\nmean(x)\nmedian(x)\nvar(x)\nlog(x)\nln(x)\nsqrt(x)\nsum(x)\nlength(x)\nsample(x, replace = T)\n\n\nNotice that the last function (sample) has an argument (replace=T)\nArguments simply modify or direct the function in some way\nThere are many arguments for each function, some of which are defaults"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#getting-help",
    "href": "Lecture_Folder/Week1b.html#getting-help",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Getting Help",
    "text": "Getting Help\n\nGetting Help on any function is very easy - just type a question mark and the name of the function.\nThere are functions for just about anything within R and it is easy enough to write your own functions if none already exist to do what you want to do.\nIn general, function calls have a simple structure: a function name, a set of parentheses and an optional set of parameters to send to the function.\nHelp pages exist for all functions that, at a minimum, explain what parameters exist for the function.\n\nHelp can be accessed a few ways - try them :"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#getting-help-1",
    "href": "Lecture_Folder/Week1b.html#getting-help-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Getting Help",
    "text": "Getting Help\n\n- help(mean)\n- ?mean\n- example(mean)\n- help.search(\"mean\")\n- apropos(\"mean\")\n- args(mean)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#creating-vectors",
    "href": "Lecture_Folder/Week1b.html#creating-vectors",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Creating vectors",
    "text": "Creating vectors\n\nCreating vector of new data by entering it by hand can be a drag\nHowever, it is also very easy to use functions such as seq and sample\nTry the examples below Can you figure out what the three arguments in the parentheses mean?\nTry varying the arguments to see what happens.\nDon’t go too crazy with the last one or your computer might slow way down"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#creating-vectors-1",
    "href": "Lecture_Folder/Week1b.html#creating-vectors-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Creating vectors",
    "text": "Creating vectors\n\nseq_1 &lt;- seq(0.0, 10.0, by = 0.1)\nprint(seq_1)\n\n  [1]  0.0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1.0  1.1  1.2  1.3  1.4\n [16]  1.5  1.6  1.7  1.8  1.9  2.0  2.1  2.2  2.3  2.4  2.5  2.6  2.7  2.8  2.9\n [31]  3.0  3.1  3.2  3.3  3.4  3.5  3.6  3.7  3.8  3.9  4.0  4.1  4.2  4.3  4.4\n [46]  4.5  4.6  4.7  4.8  4.9  5.0  5.1  5.2  5.3  5.4  5.5  5.6  5.7  5.8  5.9\n [61]  6.0  6.1  6.2  6.3  6.4  6.5  6.6  6.7  6.8  6.9  7.0  7.1  7.2  7.3  7.4\n [76]  7.5  7.6  7.7  7.8  7.9  8.0  8.1  8.2  8.3  8.4  8.5  8.6  8.7  8.8  8.9\n [91]  9.0  9.1  9.2  9.3  9.4  9.5  9.6  9.7  9.8  9.9 10.0\n\nseq_2 &lt;- seq(10.0, 0.0, by = -0.1)\nprint(seq_2)\n\n  [1] 10.0  9.9  9.8  9.7  9.6  9.5  9.4  9.3  9.2  9.1  9.0  8.9  8.8  8.7  8.6\n [16]  8.5  8.4  8.3  8.2  8.1  8.0  7.9  7.8  7.7  7.6  7.5  7.4  7.3  7.2  7.1\n [31]  7.0  6.9  6.8  6.7  6.6  6.5  6.4  6.3  6.2  6.1  6.0  5.9  5.8  5.7  5.6\n [46]  5.5  5.4  5.3  5.2  5.1  5.0  4.9  4.8  4.7  4.6  4.5  4.4  4.3  4.2  4.1\n [61]  4.0  3.9  3.8  3.7  3.6  3.5  3.4  3.3  3.2  3.1  3.0  2.9  2.8  2.7  2.6\n [76]  2.5  2.4  2.3  2.2  2.1  2.0  1.9  1.8  1.7  1.6  1.5  1.4  1.3  1.2  1.1\n [91]  1.0  0.9  0.8  0.7  0.6  0.5  0.4  0.3  0.2  0.1  0.0"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#creating-vectors-2",
    "href": "Lecture_Folder/Week1b.html#creating-vectors-2",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Creating vectors",
    "text": "Creating vectors\n\nseq_square &lt;- (seq_2)*(seq_2)\nprint(seq_square)\n\n  [1] 100.00  98.01  96.04  94.09  92.16  90.25  88.36  86.49  84.64  82.81\n [11]  81.00  79.21  77.44  75.69  73.96  72.25  70.56  68.89  67.24  65.61\n [21]  64.00  62.41  60.84  59.29  57.76  56.25  54.76  53.29  51.84  50.41\n [31]  49.00  47.61  46.24  44.89  43.56  42.25  40.96  39.69  38.44  37.21\n [41]  36.00  34.81  33.64  32.49  31.36  30.25  29.16  28.09  27.04  26.01\n [51]  25.00  24.01  23.04  22.09  21.16  20.25  19.36  18.49  17.64  16.81\n [61]  16.00  15.21  14.44  13.69  12.96  12.25  11.56  10.89  10.24   9.61\n [71]   9.00   8.41   7.84   7.29   6.76   6.25   5.76   5.29   4.84   4.41\n [81]   4.00   3.61   3.24   2.89   2.56   2.25   1.96   1.69   1.44   1.21\n [91]   1.00   0.81   0.64   0.49   0.36   0.25   0.16   0.09   0.04   0.01\n[101]   0.00"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#creating-vectors-3",
    "href": "Lecture_Folder/Week1b.html#creating-vectors-3",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Creating vectors",
    "text": "Creating vectors\n\nseq_square_new &lt;- (seq_2)^2\nprint(seq_square_new)\n\n  [1] 100.00  98.01  96.04  94.09  92.16  90.25  88.36  86.49  84.64  82.81\n [11]  81.00  79.21  77.44  75.69  73.96  72.25  70.56  68.89  67.24  65.61\n [21]  64.00  62.41  60.84  59.29  57.76  56.25  54.76  53.29  51.84  50.41\n [31]  49.00  47.61  46.24  44.89  43.56  42.25  40.96  39.69  38.44  37.21\n [41]  36.00  34.81  33.64  32.49  31.36  30.25  29.16  28.09  27.04  26.01\n [51]  25.00  24.01  23.04  22.09  21.16  20.25  19.36  18.49  17.64  16.81\n [61]  16.00  15.21  14.44  13.69  12.96  12.25  11.56  10.89  10.24   9.61\n [71]   9.00   8.41   7.84   7.29   6.76   6.25   5.76   5.29   4.84   4.41\n [81]   4.00   3.61   3.24   2.89   2.56   2.25   1.96   1.69   1.44   1.21\n [91]   1.00   0.81   0.64   0.49   0.36   0.25   0.16   0.09   0.04   0.01\n[101]   0.00"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions",
    "href": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Drawing samples from distributions",
    "text": "Drawing samples from distributions\n\nHere is a way to create your own data sets that are random samples.\nAgain, play around with the arguments in the parentheses to see what happens."
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-1",
    "href": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Drawing samples from distributions",
    "text": "Drawing samples from distributions\n\nx &lt;- rnorm (10000, 0, 10)\ny &lt;- sample (1:10000, 10000, replace = T)\nxy &lt;- cbind(x,y)\nplot(x,y)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-2",
    "href": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-2",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Drawing samples from distributions",
    "text": "Drawing samples from distributions\n\nx &lt;- rnorm (10000, 0, 10)\ny &lt;- sample (1:10000, 10000, replace = T)\nxy &lt;- cbind(x,y)\nplot(xy)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-3",
    "href": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-3",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Drawing samples from distributions",
    "text": "Drawing samples from distributions\n\nx &lt;- rnorm (10000, 0, 10)\ny &lt;- sample (1:10000, 10000, replace = T)\nxy &lt;- cbind(x,y)\nhist(x)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-4",
    "href": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-4",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Drawing samples from distributions",
    "text": "Drawing samples from distributions\n\nYou’ve probably figured out that y from the last example is drawing numbers with equal probability.\nWhat if you want to draw from a distribution?\nAgain, play around with the arguments in the parentheses to see what happens."
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-5",
    "href": "Lecture_Folder/Week1b.html#drawing-samples-from-distributions-5",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Drawing samples from distributions",
    "text": "Drawing samples from distributions\n\nx &lt;-rnorm(1000, 0, 100)\nhist(x, xlim = c(-500,500))\ncurve(50000*dnorm(x, 0, 100), xlim = c(-500,500), add=TRUE, col='Red')\n\n\n\ndnorm() generates the probability density, which can be plotted using the curve() function.\nNote that is curve is added to the plot using add=TRUE"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#visualizing-data",
    "href": "Lecture_Folder/Week1b.html#visualizing-data",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Visualizing Data",
    "text": "Visualizing Data\n\nSo far you’ve been visualizing just the list of output numbers\nExcept for the last example where I snuck in a hist function.\nYou can also visualize all of the variables that you’ve created using the plot function (as well as a number of more sophisticated plotting functions).\nEach of these is called a high level plotting function, which sets the stage\nLow level plotting functions will tweak the plots and make them beautiful"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#visualizing-data-1",
    "href": "Lecture_Folder/Week1b.html#visualizing-data-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Visualizing Data",
    "text": "Visualizing Data\n\nWhat do you think that each of the arguments means for the plot function?\nA cool thing about R is that the options for the arguments make sense.\nTry adjusting an argument and see if it works\nNote next week we will be exploring the plotting in GGPlot2"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#visualizing-data-2",
    "href": "Lecture_Folder/Week1b.html#visualizing-data-2",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Visualizing Data",
    "text": "Visualizing Data\n\nseq_1 &lt;- seq(0.0, 10.0, by = 0.1) \nplot (seq_1, xlab=\"space\", ylab =\"function of space\", type = \"p\", col = \"red\")"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#putting-plots-in-a-single-figure",
    "href": "Lecture_Folder/Week1b.html#putting-plots-in-a-single-figure",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Putting plots in a single figure",
    "text": "Putting plots in a single figure\n\nOn the next slide\nThe first line of the lower script tells R that you are going to create a composite figure that has two rows and two columns. Can you tell how?\nNow, modify the code to add two more variables and add one more row of two panels.\n\n\nseq_1 &lt;- seq(0.0, 10.0, by = 0.1)\nseq_2 &lt;- seq(10.0, 0.0, by = -0.1)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#putting-plots-in-a-single-figure-1",
    "href": "Lecture_Folder/Week1b.html#putting-plots-in-a-single-figure-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Putting plots in a single figure",
    "text": "Putting plots in a single figure\n\npar(mfrow=c(2,2))\nplot (seq_1, xlab=\"time\", ylab =\"p in population 1\", type = \"p\", col = 'red')\nplot (seq_2, xlab=\"time\", ylab =\"p in population 2\", type = \"p\", col = 'green')\nplot (seq_square, xlab=\"time\", ylab =\"p2 in population 2\", type = \"p\", col = 'blue')\nplot (seq_square_new, xlab=\"time\", ylab =\"p in population 1\", type = \"l\", col = 'yellow')"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#example-using-binomial-distribution",
    "href": "Lecture_Folder/Week1b.html#example-using-binomial-distribution",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Example using binomial distribution",
    "text": "Example using binomial distribution\n\nAs above for the normal distribution, data can be generated by being sampled from nearly any distribution and then visualized.\nBelow I’m having you use the ‘histogram’ function. What does it do?"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#example-using-binomial-distribution-1",
    "href": "Lecture_Folder/Week1b.html#example-using-binomial-distribution-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Example using binomial distribution",
    "text": "Example using binomial distribution\n\n10 successes (out of 20 trials) is the most frequent outcome\n\n\nheads &lt;- rbinom(n=1000, size=20, prob=0.5)\nhist(heads)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#example-using-binomial-distribution-2",
    "href": "Lecture_Folder/Week1b.html#example-using-binomial-distribution-2",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Example using binomial distribution",
    "text": "Example using binomial distribution\n\nThis kind of statement can be run in one line as well, which is sometimes easier.\n\n\nhist(rbinom(n=1000, size=20, prob=0.5))"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#creating-data-frames-in-r",
    "href": "Lecture_Folder/Week1b.html#creating-data-frames-in-r",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Creating Data Frames in R",
    "text": "Creating Data Frames in R\n\nAs you have seen, in R you can generate your own random data set drawn from nearly any distribution very easily.\nOften we will want to use collected data.\nNow, let’s make a dummy dataset to get used to dealing with data frames\nSet up three variables (hydrogel_concentration, compression and conductivity) as vectors\n\n\nhydrogel_concentration &lt;- factor(c(\"low\", \"high\", \"high\", \"high\", \"medium\", \"medium\", \"medium\",\"low\"))\ncompression &lt;- c(3.4, 3.4, 8.4, 3, 5.6, 8.1, 8.3, 4.5)\nconductivity &lt;- c(0, 9.2, 3.8, 5, 5.6, 4.1, 7.1, 5.3)\n\n\nCreate a data frame where vectors become columns\n\n\nmydata &lt;- data.frame(hydrogel_concentration, compression, conductivity)\nrow.names(mydata) &lt;- c(\"Sample_1\", \"Sample_2\", \"Sample_3\", \"Sample_4\", \n                       \"Sample_5\", \"Sample_6\", \"Sample_7\", \"Sample_8\")\n\n\nNow you have a hand-made data frame with row names\nTake a look at it in the data section of RStudio"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#reading-in-data-frames-in-r",
    "href": "Lecture_Folder/Week1b.html#reading-in-data-frames-in-r",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Reading in Data Frames in R",
    "text": "Reading in Data Frames in R\n\nA strength of R is being able to import data from an external source\nCreate the same table that you did above in a spreadsheet like Excel\nExport it to comma separated and tab separated text files for importing into R.\nThe first will read in a comma-delimited file, whereas the second is a tab-delimited\nIn both cases the header and row.names arguments indicate that there is a header row and row label column\nNote that the name of the file by itself will have R look in the CWD, whereas a full path can also be used"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#reading-in-data-frames-in-r-1",
    "href": "Lecture_Folder/Week1b.html#reading-in-data-frames-in-r-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Reading in Data Frames in R",
    "text": "Reading in Data Frames in R\n\nYourFile &lt;- read.table('yourfile.csv', header=T, row.names=1, sep=',')\nYourFile &lt;- read.table('yourfile.txt', header=T, row.names=1, sep='\\t')"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#exporting-data-frames-in-r",
    "href": "Lecture_Folder/Week1b.html#exporting-data-frames-in-r",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Exporting Data Frames in R",
    "text": "Exporting Data Frames in R\n\nwrite.table(YourFile, \"yourfile.csv\", quote=F, row.names=T, sep=\",\")\nwrite.table(YourFile, \"yourfile.txt\", quote=F, row.names=T, sep=\"\\t\")"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#indexing-in-data-frames",
    "href": "Lecture_Folder/Week1b.html#indexing-in-data-frames",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Indexing in data frames",
    "text": "Indexing in data frames\n\nNext up - indexing just a subset of the data\nThis is a very important idea in R, that you can analyze just a subset of the data.\nThis is analyzing only the data in the file you made that has the factor value ‘mixed’.\n\n\nprint (YourFile[,2])\nprint (YourFile$temp)\nprint (YourFile[2,])\nplot (YourFile$temp, YourFile$elevation)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#indexing-in-data-frames-1",
    "href": "Lecture_Folder/Week1b.html#indexing-in-data-frames-1",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Indexing in data frames",
    "text": "Indexing in data frames\n\nYou can perform operations on particular levels of a factor\nCalculating the mean of the ‘mixed’ and ‘gipps’ levels of habitat.\nNote that the first argument is the numerical column vector, and the second is the factor column vector.\nThe third is the operation. Reversing the first two does not work (the one below).\n\n\ntapply(YourFile$temp, YourFile$habitat, mean)\ntapply(YourFile$temp, YourFile$habitat, var)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#r-interlude-some-real-transcriptomic-data",
    "href": "Lecture_Folder/Week1b.html#r-interlude-some-real-transcriptomic-data",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "R INTERLUDE | Some real transcriptomic data",
    "text": "R INTERLUDE | Some real transcriptomic data\n\nExamine the data file\nHow many many rows and columns are there?\nHow many different variables are there?\nWhat are the general types of variables?\nNow let’s read the data file into R and analyze it\nThis exercise will help you get used to reading in and manipulating genomic data files\nFirst off, remember to set your working directory to find your file correctly"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#some-real-transcriptomic-data",
    "href": "Lecture_Folder/Week1b.html#some-real-transcriptomic-data",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Some real transcriptomic data",
    "text": "Some real transcriptomic data\n\nRNAseq_Data &lt;- read.table('&lt;name_of_file&gt;', header=TRUE, sep=',')\n\nprint (RNAseq_Data)\nhead (RNAseq_Data)\ntail (RNAseq_Data)\n\nprint (RNAseq_Data[,2])\nprint (RNAseq_Data[1,])\nprint (RNAseq_Data[1,2])\nprint (RNAseq_Data$ENSGACG00000000010)\nprint (RNAseq_Data$ENSGACG00000000010&gt;45.0)"
  },
  {
    "objectID": "Lecture_Folder/Week1b.html#summary-stats-and-figures",
    "href": "Lecture_Folder/Week1b.html#summary-stats-and-figures",
    "title": "Week 1b - Statistics for Bioengineering",
    "section": "Summary stats and figures",
    "text": "Summary stats and figures\n\nsummary1 &lt;- summary(RNAseq_Data $ENSGACG00000000003)\nprint (summary1)\n\nhist(RNAseq_Data $ENSGACG00000000003)\nboxplot(RNAseq_Data$ENSGACG00000000003)\nboxplot(RNAseq_Data$ENSGACG00000000003~RNAseq_Data$Population)\nplot(RNAseq_Data $ENSGACG00000000003, RNAseq_Data$ENSGACG00000000003)\n\nboxplot(RNAseq_Data $ENSGACG00000000003~RNAseq_Data$Treatment, \n        col = \"red\", ylab = \"Expression Level\", xlab = \"Treatment level\", \n        border =\"orange\", \n        main = \"Boxplot of variation in gene expression across microbiota treatments\")\n\n\n\n\nBioE_Stats_2025 - Knight Campus"
  }
]