---
title: "Week 1a Statistics for Bioengineering"
author: "Bill Cresko"
format: 
  revealjs:
    footer: BioE_Stats_2025 - Knight Campus
    transition: fade
    transition-speed: slow
editor: visual
---

```{r}
library(tidyverse)
library(gt)
library(readxl)
theme_set(theme_minimal())
```

## Statistics for Bioengineers

![](images/Cover2.tiff){height = "50"}

## Goals of the course

::: {.callout-tip title="This is a practical course and we will learn by doing"}
-   Teach fundamental skills for your scientific careers
-   Provide a broad coverage of the core components of modern statistics
-   Provide you with the computational tools necessary to carry out your work
-   To prepare you for more advanced statistics and programming education
:::

------------------------------------------------------------------------

## 

```{r, echo=FALSE, out.width='80%', fig.align='center'}
knitr::include_graphics("images/week_01.001.jpeg")
```

## 

```{r, echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics("images/week_01.002.jpeg")
```

## 

```{r, echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics("images/week_01.003.jpeg")
```

## 

```{r, echo=FALSE, out.width='100%'}
knitr::include_graphics("images/week_01.004.jpeg")
```

## 

```{r, echo=FALSE, out.width='80%', fig.align='center'}
knitr::include_graphics("images/week_01.001.jpeg")
```

------------------------------------------------------------------------

## Class Introductions

::: {.callout-tip title="Who are you?"}
-   Your name
-   Year in grad school
-   Home lab or rotation lab
-   What is your good news this week?
-   What has your experience with programming/statistics been like?
:::

## What will you learn?

::: incremental{.smaller}
-   Read and write code in Unix and R
-   Implement reproducible research practices through
    -   Markdown
    -   GitHub
    -   Talapas and Amazon Web Services (AWS)
:::

## What will you learn?

::: incremental{.smaller}
-   Exploratory data analysis and visualization
-   Probability in the context of distributions and sampling
-   Experimental design
-   p-values, test statistics, and types of errors
-   Statistical analyses such as t-tests and contigency tests
-   Linear and non-linear modeling
-   Classical machine learning
:::

## Class Logistics

::: incremental
-   Meet Tuesdays and Thursdays from 4:00pm - 5:50pm in KC158
    -   Most of class time will be hands-on coding practice, less time lecturing
-   Coding and statistics practice via homework in Weeks 2-9
    -   Available Tuesday of that week, due before class on Tuesday in two weeks
-   Weeks 10-11 you will complete a final coding project
    -   Design script(s) that works with your research and interests using the skills you've learned this term
:::

## Required Materials {.flexbox .vcenter}

-   No textbooks or purchases required
-   Access to a laptop or computer running Windows, MacOS, or Linux operating systems
-   An account on Talapas (through your lab, or through CBDS)
-   Announcements and assignments posted on Canvas
-   The majority of course material on our class website https://wcresko.github.io/BioE_Stats/

------------------------------------------------------------------------

# Installing Programs

## 

::: callout-note
-   Mac and Linux systems run using the same language, but previous versions of Windows lacks some of the basic features found on other systems
-   To help you practice and learn how to code in Unix, we will help you install some programs on your computer for running Unix
-   R and RStudio should work on any computer
:::

## Running `R` {.flexbox .vcenter}

-   Need to make sure that you have `R` installed
    -   locally or on a server
    -   https://www.r-project.org
-   Can run R from the command line
    -   just type `R`
    -   can run it locally as well as on clusters

## Running `R`

-   Install an R *Integrated Development Environment* (IDE)
    -   RStudio: http://www.rstudio.com
    -   Makes working with R much easier, particularly for a new R user
    -   Run on Windows, Mac or Linux OS
    -   Use the RStudio Desktop Open Source (Free)

## `RStudio` {.flexbox .vcenter}

```{r, echo=FALSE, out.width='75%', fig.align='center'}
knitr::include_graphics("images/RStudio_Screenshot.png")
```

## Accessing the shell {.flexbox .vcenter}

-   Mac users: open the "Terminal" app, or use another app like 'iTerm2'

-   Linux users: open one of several "Terminal" apps

    ::: callout-caution
    ## Windows users have a little more work to do

    See the next slides
    :::

## Accessing the shell {.flexbox .vcenter}

### *Windows users*

-   Guide: https://ubuntu.com/tutorials/install-ubuntu-on-wsl2-on-windows-10#1-overview
-   Run Windows PowerShell as administrator
-   Install WSL2 by typing `wsl --install`
-   Restart your computer
-   Search for and install Ubuntu from Microsoft store app
-   ***OR*** type `wsl --install -d ubuntu` on PowerShell to do both at once

## *Accessing the shell on Windows*

-   Open Ubuntu and set up a username and password
-   Does not have to match your login info for Windows
-   Run `sudo apt update` then `sudo apt upgrade` to ensure everything is up to date
-   Will need to create folders and files within your Ubuntu folder on your computer

## Terminal in RStudio

::: callout-important
```         
RStudio has a terminal pane all it's own that you can use
```
:::

# Computational Tools - R and RStudio {.flexbox .vcenter}

```{r, echo=FALSE, out.width='75%', fig.align='center'}
knitr::include_graphics("images/RStudio_Screenshot.png")
```
